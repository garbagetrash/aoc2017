set b 65           # b = 65
set c b            # c = b = 65
jnz a 2            # (a != 0) goto 5 : goto 4
jnz 1 5            # goto 9
mul b 100          # b = b*100 = 6500
sub b -100000      # b = b + 100000 = 106500
set c b            # c = b = 106500
sub c -17000       # c = c + 17000 = 123500
set f 1            # f = 1                          // DOIT AGAIN
set d 2            # d = 2
set e 2            # e = 2
set g d            # g = d
mul g e            # g = g*e = d*e
sub g b            # g = g - b = d*e - b
jnz g 2            # (g != 0) (d*e != b) goto 17 : goto 16
set f 0            # f = 0
sub e -1           # e = e + 1
set g e            # g = e
sub g b            # g = g - b = e - b
jnz g -8           # (g != 0) (e != b) ? goto 12 : goto 21
sub d -1           # d = d + 1
set g d            # g = d
sub g b            # g = g - b = d - b
jnz g -13          # (g != 0) (d != b) ? goto 11 : goto 25
jnz f 2            # f != 0 ? goto 27 : goto 26
sub h -1           # h += 1
set g b            # g = b
sub g c            # g = b - c
jnz g 2            # (g != 0) ? goto 31 : exit
jnz 1 3            # exit
sub b -17          # b = b + 17
jnz 1 -23          # goto 9

a = switch to execute garbage from lines 5-8 (set b = 106500, c = 123500)
b = thingy that we're incrementing by 17 every time through the whole deal.
c = final value we want b to get to to exit, whole thing loops 1000x
d = incrementor, starts at 2, goes up to b and resets e to 2
e = another incrementor, starts at 2, goes up to b
f = switch to begin incrementing h when f = 0
g = working stack/accumulator register
h = return value/final value/goal

Seems to be a thing incrementing through d and e to set f to 0 (increment h) when b has evenly divisible factors.  b = [106500, 123500] in steps of 17.

answer 10388 is too high
answer 9933 is also too high
answer 0 is incorrect
answer 84 is incorrect
answer 917 is correct
